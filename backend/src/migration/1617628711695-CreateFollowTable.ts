import { MigrationInterface, QueryRunner } from "typeorm";

export class CreateFollowTable1617628711695 implements MigrationInterface {
    public async up(queryRunner: QueryRunner): Promise<void> {
        const query = `
            CREATE TABLE IF NOT EXISTS follow (
                id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY UNIQUE,
                user_id INTEGER NOT NULL REFERENCES public.user (id) ON DELETE CASCADE,
                notification_frequency VARCHAR NOT NULL,
                target_catalog_id INTEGER REFERENCES catalog (id) ON DELETE CASCADE,
                target_package_id INTEGER REFERENCES package (id) ON DELETE CASCADE,
                target_collection_id INTEGER REFERENCES collection (id) ON DELETE CASCADE,
                target_package_issue_id INTEGER REFERENCES package_issue (id) ON DELETE CASCADE,
                target_user_id INTEGER REFERENCES public.user (id) ON DELETE CASCADE,
                event_types VARCHAR[] NOT NULL,
                created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
                updated_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP
            );

            CREATE INDEX IF NOT EXISTS follow_user_catalog_index ON follow (user_id);
            CREATE UNIQUE INDEX IF NOT EXISTS follow_user_catalog_index ON follow (user_id, target_catalog_id);
            CREATE UNIQUE INDEX IF NOT EXISTS follow_user_package_index ON follow (user_id, target_package_id);
            CREATE UNIQUE INDEX IF NOT EXISTS follow_user_collection_index ON follow (user_id, target_collection_id);
            CREATE UNIQUE INDEX IF NOT EXISTS follow_user_package_issue_index ON follow (user_id, target_package_issue_id);
            CREATE UNIQUE INDEX IF NOT EXISTS follow_user_user_index ON follow (user_id, target_user_id);
        `;

        return queryRunner.query(query);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        // no-op
    }
}
