{
    "$id": "https://datapm.io/docs/package-file-schema-v0.9.0.json",
    "type": "object",
    "title": "DataPM Package File",
    "description": "The datapm package file schema for validating package files.",
    "default": {},
    "required": [
        "updatedDate",
        "displayName",
        "packageSlug",
        "version",
        "description",
        "schemas",
        "sources",
        "canonical"
    ],
    "properties": {
        "canonical": {
            "$id": "#/generatedBy",
            "type": "boolean",
            "description": "Whether or not this package an unmodified original copy. If true, the package is not modified and can be safely saved and used later. If false, this package has been modified for security or convience purposes and should not be saved"
        },
        "modifiedProperties": {
            "$id": "#/generatedBy",
            "type": "array",
            "description": "If canonical is false, this will contain an array of the package file properties that contain modified content.",
            "items": {
                "type": "string"
            }
        },
        "generatedBy": {
            "$id": "#/generatedBy",
            "type": "string",
            "maxLength": 256,
            "title": "Generated By",
            "description": "The name of the person or system that generated the pacakge file.",
            "default": ""
        },
        "updatedDate": {
            "$id": "#/updatedDate",
            "type": "string",
            "maxLength": 128,
            "format": "date-time",
            "title": "Schema Updated Date",
            "description": "The last updated date of the package file - not the data!",
            "default": "[\\W_-]+"
        },
        "displayName": {
            "$id": "#/displayName",
            "type": "string",
            "maxLength": 128,
            "title": "User Friendly Name",
            "description": "The name shown in UI's for user ease of understanding.",
            "default": "",
            "pattern": "^[\\w _-]+$"
        },
        "packageSlug": {
            "$id": "#/packageSlug",
            "type": "string",
            "maxLength": 100,
            "title": "Short Name",
            "description": "The name used to reference this package for API and developer purposes. This field is restricted to characters A-z,0-9,_,-,@",
            "default": "",
            "pattern": "^[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?$"
        },
        "version": {
            "$id": "#/version",
            "type": "string",
            "maxLength": 128,
            "title": "Version",
            "description": "In the semantic versioning format of major.minor.patch",
            "default": "1.0.0",
            "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
        },
        "readmeFile": {
            "$id": "#/readmeFile",
            "type": "string",
            "maxLength": 1024,
            "title": "README File Location",
            "description": "The relative path from the package file to the markdown formated README file. Specify this instead of readmeMarkdown to manage the content in a separate file."
        },
        "readmeMarkdown": {
            "$id": "#/readmeMarkdown",
            "type": "string",
            "maxLength": 100000,
            "title": "README.md contents",
            "description": "Markdown formated README content for the package."
        },
        "licenseFile": {
            "$id": "#/licenseFile",
            "type": "string",
            "maxLength": 1024,
            "title": "LICENSE File Location",
            "description": "The relative path from the package file to the markdown formated LICENSE file. Specify this instead of licenseMarkdown to manage the content in a separate file."
        },
        "licenseMarkdown": {
            "$id": "#/licenseMarkdown",
            "type": "string",
            "maxLength": 100000,
            "title": "LICENSE.md contents",
            "description": "Markdown formated content describing the license for the schema and data in the package."
        },
        "website": {
            "$id": "#/website",
            "type": "string",
            "format": "uri",
            "maxLength": 1024,
            "title": "Website",
            "description": "The URL of the information/marketing website related to this package."
        },
        "contactEmail": {
            "$id": "#/contactEmail",
            "type": "string",
            "format": "email",
            "maxLength": 1024,
            "title": "Contact Email",
            "description": "An email address for contacting the author."
        },
        "registries": {
            "$id": "#/registries",
            "type": "array",
            "title": "Registries",
            "description": "The registries to which this package file is published",
            "default": [
                {
                    "url": "https://datapm.io",
                    "pattern": "^https?:\\/\\/.*"
                }
            ],
            "items": {
                "type": "object",
                "required": [
                    "publishMethod",
                    "catalogSlug",
                    "url"
                ],
                "properties": {
                    "catalogSlug": {
                        "type": "string",
                        "maxLength": 38,
                        "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9]|-(?=[a-zA-Z0-9])){0,38}$"
                    },
                    "url": {
                        "type": "string",
                        "maxLength": 2048
                    },
                    "publishMethod": {
                        "type": "string",
                        "description": "How the package maintainer chooses to publish the schema and provide access to the data. This is used by the registry to determine how to alter the sources definition at consumer request time to properly inform the consumer on how to obtain the data.",
                        "enum": [
                            "SCHEMA_ONLY",
                            "SCHEMA_AND_DATA",
                            "SCHEMA_PROXY_DATA"
                        ]
                    }
                }
            }
        },
        "schemas": {
            "$id": "#/schemas",
            "type": "array",
            "title": "Schemas",
            "description": "A set of schemas of the data that are avialable in the package. These data types may be aquired indpenedntly, or all together - usually through multiple connections.",
            "default": [],
            "items": {
                "allOf": [
                    {
                        "type": "object",
                        "title": "Schema",
                        "description": "A schema of data available in the package. ",
                        "additionalItems": true,
                        "properties": {
                            "properties": {
                                "$ref": "#/definitions/properties"
                            },
                            "description": {
                                "type": "string",
                                "maxLength": 4096
                            },
                            "derivedFrom": {
                                "$id": "#/schemas/derivedFrom",
                                "type": "array",
                                "description": "An array of identifiers (URIs, files, or package identifers, that the schema is derived from",
                                "title": "Derived From",
                                "default": [],
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "displayName"
                                    ],
                                    "oneOf": [
                                        {
                                            "required": [
                                                "packageIdentifier"
                                            ]
                                        },
                                        {
                                            "required": [
                                                "url"
                                            ]
                                        }
                                    ],
                                    "properties": {
                                        "displayName": {
                                            "type": "string",
                                            "maxLength": 128
                                        },
                                        "schemaIdentifier": {
                                            "type": "object",
                                            "required": [
                                                "registryUrl",
                                                "catalogSlug",
                                                "packageSlug",
                                                "version"
                                            ],
                                            "description": "Optionally, The identifier for the upstream schema.",
                                            "properties": {
                                                "registryUrl": {
                                                    "$id": "#/schemas/derivedFrom/packageIdentifier/registryUrl",
                                                    "type": "string",
                                                    "maxLength": 512,
                                                    "description": "The base URL of the registry. Example https://datapm.company.net"
                                                },
                                                "catalogSlug": {
                                                    "$id": "#/schemas/derivedFrom/packageIdentifier/catalogSlug",
                                                    "type": "string",
                                                    "maxLength": 38,
                                                    "pattern": "^[a-zA-Z0-9](?:[a-zA-Z0-9]|-(?=[a-zA-Z0-9])){0,38}$"
                                                },
                                                "packageSlug": {
                                                    "$id": "#/schemas/derivedFrom/packageIdentifier/packageSlug",
                                                    "type": "string",
                                                    "maxLength": 100,
                                                    "title": "Short Name",
                                                    "description": "The name used to reference this package for API and developer purposes. This field is restricted to characters A-z,0-9,_,-,@",
                                                    "default": "",
                                                    "pattern": "^[a-zA-Z0-9]+(?:(?:(?:[._]|__|[-]*)[a-zA-Z0-9]+)+)?$"
                                                },
                                                "version": {
                                                    "$id": "#/schemas/derivedFrom/packageIdentifier/version",
                                                    "type": "string",
                                                    "maxLength": 128,
                                                    "title": "Version",
                                                    "description": "In the semantic versioning format of major.minor.patch",
                                                    "default": "1.0.0",
                                                    "pattern": "^[0-9]+\\.[0-9]+\\.[0-9]+$"
                                                },
                                                "schemaTitle": {
                                                    "$id": "#/schemas/derivedFrom/packageIdentifier/schemaTitle",
                                                    "type": "string",
                                                    "maxLength": 512,
                                                    "title": "Schema Title",
                                                    "description": "The title of the schema in the upstream package file"
                                                }
                                            }
                                        },
                                        "url": {
                                            "$id": "#/schemas/derivedFrom/url",
                                            "type": "string",
                                            "format": "url",
                                            "maxLength": 2048,
                                            "description": "Alternatively to the packageIdentifier, a URL of the upstream data set or website about it"
                                        }
                                    }
                                }
                            },
                            "hidden": {
                                "$id": "#/schemas/hidden",
                                "type": "boolean",
                                "title": "Hidden",
                                "description": "Whether this schema should be used by the consumer by default."
                            },
                            "derivedFromDescription": {
                                "$id": "#/schemas/derivedFromDescription",
                                "type": "string",
                                "maxLength": 2048,
                                "title": "Derived From Description",
                                "description": "A short description, script, or SQL that describes how this schema was derived from the references in the 'derivedFrom' property."
                            },
                            "recordCount": {
                                "$id": "#/schemas/recordCount",
                                "type": "integer",
                                "title": "Record Count",
                                "description": "The exact or estamated number of records in the data set.",
                                "default": 0
                            },
                            "recordCountPrecision": {
                                "$id": "#/schemas/recordCountPrecision",
                                "type": "string",
                                "title": "Record Count Approximation Method",
                                "description": "How to consider the recordCount value",
                                "enum": [
                                    "EXACT",
                                    "APPROXIMATE",
                                    "GREATER_THAN"
                                ]
                            },
                            "unit": {
                                "$id": "#/schemas/unit",
                                "type": "string",
                                "title": "Unit",
                                "description": "What schema or a property in the data represents. Example: Country, Person, Location and Time, etc",
                                "maxLength": 128
                            },
                            "samples": {
                                "$id": "#/sampleRecords",
                                "type": "array",
                                "title": "Samples",
                                "description": "A randomly selected set of sample reference records",
                                "default": [],
                                "items": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "sources": {
            "$ref": "#/definitions/source"
        }
    },
    "definitions": {
        "source": {
            "type": "array",
            "items": {
                "$id": "#/sources/source",
                "type": "object",
                "title": "Data Source",
                "description": "A description of how the data is sourceed",
                "default": {},
                "required": [
                    "type",
                    "slug",
                    "streamSets",
                    "connectionConfiguration"
                ],
                "properties": {
                    "slug": {
                        "$id": "#/sources/source/slug",
                        "type": "string",
                        "maxLength": 128
                    },
                    "type": {
                        "$id": "#/sources/source/type",
                        "type": "string",
                        "maxLength": 128,
                        "title": "Source Type",
                        "description": "The unique identifier for the source implementation.",
                        "default": ""
                    },
                    "connectionConfiguration": {
                        "$id": "#/sources/source/connectionConfiguration",
                        "type": "object",
                        "title": "Source Connection Configuration",
                        "description": "The configuration used by the source implementation to connect to the target system",
                        "default": {},
                        "required": [],
                        "properties": {},
                        "additionalProperties": true
                    },
                    "configuration": {
                        "$id": "#/sources/source/configuration",
                        "type": "object",
                        "title": "Source Options Configuration",
                        "description": "The configuration used by the source implementation to aquire and interpret the record stream, after connecting and authenticating",
                        "default": {},
                        "required": [],
                        "properties": {},
                        "additionalProperties": true
                    },
                    "updateConfiguration": {
                        "$id": "#/sources/source/updateConfiguration",
                        "type": "object",
                        "title": "Source Options Configuration",
                        "description": "The configuration used only during the update command.",
                        "default": {},
                        "required": [],
                        "properties": {},
                        "additionalProperties": true
                    },
                    "updateCredentialsIdentifier": {
                        "type": "string"
                    },
                    "credentialsIdentifier": {
                        "type": "string"
                    },
                    "streamSets": {
                        "type": "array",
                        "title": "source set",
                        "description": "An array of StreamSet objects that each define one logical unit of streaming data, which may be composed of one or more real streams",
                        "items": {
                            "type": "object",
                            "required": [
                                "slug",
                                "schemaTitles",
                                "updateMethods"
                            ],
                            "properties": {
                                "slug": {
                                    "$id": "#/sources/source/streamSet/slug",
                                    "type": "string",
                                    "maxLength": 128
                                },
                                "lastUpdateHash": {
                                    "$id": "#/sources/source/streamSet/lastUpdateHash",
                                    "type": "string",
                                    "maxLength": 2048,
                                    "title": "Last Source Update Hash",
                                    "description": "The update hash reported by the source after generating this package file.",
                                    "default": ""
                                },
                                "schemaTitles": {
                                    "$id": "#/sources/source/streamSet/schemaTitle",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "maxLength": 512
                                    }
                                },
                                "updateMethods": {
                                    "$id": "#/sources/source/streamSet/updateMethods",
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "enum": [
                                            "CONTINUOUS",
                                            "BATCH_FULL_SET",
                                            "APPEND_ONLY_LOG"
                                        ]
                                    }
                                },
                                "streamStats": {
                                    "type": "object",
                                    "required": [
                                        "inspectedCount"
                                    ],
                                    "properties": {
                                        "byteCount": {
                                            "$id": "#/sources/source/streamSet/byteCount",
                                            "type": "integer",
                                            "title": "Byte Count",
                                            "description": "The exact or approximate number of bytes in the streamset.",
                                            "default": 0
                                        },
                                        "byteCountPrecision": {
                                            "$id": "#/sources/source/streamSet/byteCountPrecision",
                                            "type": "string",
                                            "title": "Byte Count Approximation Method",
                                            "description": "How to consider the byteCount value.",
                                            "enum": [
                                                "EXACT",
                                                "APPROXIMATE",
                                                "GREATER_THAN"
                                            ]
                                        },
                                        "recordCount": {
                                            "$id": "#/sources/source/streamSet/recordCount",
                                            "type": "integer",
                                            "title": "Record Count",
                                            "description": "The exact or estamated number of records in the data set.",
                                            "default": 0
                                        },
                                        "recordCountPrecision": {
                                            "$id": "#/sources/source/streamSet/recordCountPrecision",
                                            "type": "string",
                                            "title": "Record Count Approximation Method",
                                            "description": "How to consider the recordCount value",
                                            "enum": [
                                                "EXACT",
                                                "APPROXIMATE",
                                                "GREATER_THAN"
                                            ]
                                        },
                                        "inspectedCount": {
                                            "$id": "#/sources/source/streamSet/inspectedCount",
                                            "type": "integer",
                                            "title": "Inspected Count",
                                            "description": "The number of records inspected during the generation of this package file",
                                            "default": 0
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "additionalProperties": true
            }
        },
        "properties": {
            "type": "object",
            "patternProperties": {
                ".*": {
                    "allOf": [
                        {
                            "required": [
                                "types",
                                "title"
                            ],
                            "properties": {
                                "properties": {
                                    "$ref": "#/definitions/properties"
                                },
                                "description": {
                                    "type": "string",
                                    "maxLength": 4096
                                },
                                "hidden": {
                                    "type": "boolean"
                                },
                                "unit": {
                                    "type": "string"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "The name of the property used after pre-processing by dataPM"
                                },
                                "types": {
                                    "$ref": "#/definitions/types"
                                }
                            }
                        }
                    ]
                }
            }
        },
        "types": {
            "type": "object",
            "patternProperties": {
                "(string)|(number)|(integer)|(boolean)|(date)|(date-time)|(object)|(array)|(null)": {
                    "$ref": "#/definitions/typeValue"
                }
            }
        },
        "typeValue": {
            "type": "object",
            "required": [
                "recordCount"
            ],
            "properties": {
                "recordCount": {
                    "type": "number"
                },
                "stringMaxLength": {
                    "type": "number"
                },
                "stringMinLength": {
                    "type": "number"
                },
                "numberMaxValue": {
                    "type": "number"
                },
                "numberMinValue": {
                    "type": "number"
                },
                "numberMaxPrecision": {
                    "type": "number"
                },
                "numberMaxScale": {
                    "type": "number"
                },
                "dateMaxValue": {
                    "type": "string"
                },
                "dateMinValue": {
                    "type": "string"
                },
                "stringOptions": {
                    "type": "object",
                    "patternProperties": {
                        ".*": {
                            "type": "number"
                        }
                    }
                },
                "arrayTypes": {
                    "$ref": "#/definitions/types"
                },
                "arrayMinLength": {
                    "type": "number"
                },
                "arrayMaxLength": {
                    "type": "number"
                },
                "contentLabels": {
                    "type": "array",
                    "items": {
                        "required": [
                            "label"
                        ],
                        "properties": {
                            "label": {
                                "type": "string",
                                "maxLength": 75
                            },
                            "hidden": {
                                "type": "boolean"
                            },
                            "appliedByContentDetector": {
                                "type": "string",
                                "description": "The name of the content detector that applied the label"
                            },
                            "confidence": {
                                "type": "number",
                                "description": "A number zero to one that describes the confidence of the label"
                            },
                            "occurrence": {
                                "type": "number",
                                "description": "The number of times the content was detected"
                            }
                        }
                    }
                }
            }
        }
    },
    "additionalProperties": true
}