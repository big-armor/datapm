import { Difference, DifferenceType, PackageFile } from "datapm-lib";
import fs from "fs";
import path from "path";

export const DifferenceTypeMessages: Record<DifferenceType, string> = {
    [DifferenceType.REMOVE_SCHEMA]: "Removed Schema",
    [DifferenceType.ADD_SCHEMA]: "Added Schema",
    [DifferenceType.CHANGE_PACKAGE_DISPLAY_NAME]: "Changed Package Display Name",
    [DifferenceType.CHANGE_PACKAGE_DESCRIPTION]: "Changed Package Description",
    [DifferenceType.CHANGE_SOURCE]: "Changed Source",
    [DifferenceType.CHANGE_SOURCE_CONFIGURATION]: "Changed Source Configuration",
    [DifferenceType.CHANGE_STREAM_STATS]: "Changed Stream Stats",
    [DifferenceType.CHANGE_STREAM_UPDATE_HASH]: "Changed Stream Update Hash",
    [DifferenceType.CHANGE_STREAM_STATS]: "Changed Stream Stats",
    [DifferenceType.ADD_PROPERTY]: "Added Property",
    [DifferenceType.REMOVE_PROPERTY]: "Removed Property",
    [DifferenceType.CHANGE_SOURCE_URIS]: "Changed Source URIs",
    [DifferenceType.REMOVE_HIDDEN_PROPERTY]: "Removed Hidden Property",
    [DifferenceType.CHANGE_CONTACT_EMAIL]: "Change Contact Email",
    [DifferenceType.REMOVE_STREAM_SET]: "Remove Stream Set",
    [DifferenceType.REMOVE_SOURCE]: "Removed Source",
    [DifferenceType.REMOVE_HIDDEN_SCHEMA]: "Removed Hidden Schema",
    [DifferenceType.CHANGE_PROPERTY_TYPE]: "Changed Property Type",
    [DifferenceType.CHANGE_PROPERTY_UNIT]: "Change Property Unit",
    [DifferenceType.CHANGE_PROPERTY_FORMAT]: "Changed Property Format",
    [DifferenceType.CHANGE_PROPERTY_UNIT]: "Changed Property Unit",
    [DifferenceType.CHANGE_PROPERTY_DESCRIPTION]: "Changed Property Description",
    [DifferenceType.CHANGE_GENERATED_BY]: "Changed Generated By",
    [DifferenceType.CHANGE_UPDATED_DATE]: "Changed Updated Date",
    [DifferenceType.CHANGE_VERSION]: "Changed Version",
    [DifferenceType.CHANGE_README_MARKDOWN]: "Changed Readme Markdown",
    [DifferenceType.CHANGE_LICENSE_MARKDOWN]: "Changed License Markdown",
    [DifferenceType.CHANGE_README_FILE]: "Changed Readme File",
    [DifferenceType.CHANGE_LICENSE_FILE]: "Changed License File",
    [DifferenceType.CHANGE_WEBSITE]: "Changed Website",
    [DifferenceType.CHANGE_CONTACT_EMAIL]: "Changed Contact Email",
    [DifferenceType.HIDE_PROPERTY]: "Property Hidden",
    [DifferenceType.UNHIDE_PROPERTY]: "Property Unhidden",
    [DifferenceType.CHANGE_SOURCE_CONNECTION]: "Changed Source Connection Configuration",
    [DifferenceType.CHANGE_SOURCE_CREDENTIALS]: "Changed Source Credentials"
};

export function differenceToString(difference: Difference): string {
    let pointer = difference.pointer.split("/").pop();

    if (difference.type.toString().includes("_PROPERTY")) {
        const parts = difference.pointer.match(/.*\/properties\/(.*)/);
        if (parts) {
            pointer = parts[1];
        }
    }

    let message = `${DifferenceTypeMessages[difference.type]}`;

    if (pointer != null && pointer.length > 0) message += ` ${pointer}`;

    return message;
}

export function writePackageFile(packageFile: PackageFile): string {
    const packageFileName = `${packageFile.packageSlug}.datapm.json`;
    const packageFileLocation = path.join(process.cwd(), packageFileName);
    const json = JSON.stringify(packageFile, null, " ");

    fs.writeFileSync(packageFileLocation, json, "utf8");

    return packageFileLocation;
}

export function writeReadmeFile(packageFile: PackageFile): string {
    const fileLocation = path.join(process.cwd(), `${packageFile.packageSlug}.README.md`);
    const contents = `# ${packageFile.displayName}\n \n ${packageFile.description}`;

    fs.writeFileSync(fileLocation, contents, "utf8");

    return fileLocation;
}

export function writeLicenseFile(packageFile: PackageFile): string {
    const fileLocation = path.join(process.cwd(), `${packageFile.packageSlug}.LICENSE.md`);
    const contents = "# License\n\nLicense not defined. Contact author.";

    fs.writeFileSync(fileLocation, contents, "utf8");

    return fileLocation;
}
